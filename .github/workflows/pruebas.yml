name: PWA CI/CD Workflow

# Disparadores para el workflow
on:
  push:
    branches:
      - '*'    # Ejecutar las pruebas en cualquier rama en cada push
  pull_request:
    branches:
      - master   # Ejecutar las pruebas antes de fusionar a master

  workflow_dispatch:

# Permisos para GitHub Actions
permissions:
  contents: read

jobs:
  test:
    #name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Node.js (para Angular y Jest)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Versión de Node.js recomendada
          cache: 'npm'  # Configura el caché para npm automáticamente

      # 3. Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm install

      # 4. Compilar el proyecto Angular (ng build)
      - name: Build Angular Project
        run: npm run build --if-present

      # 5. Ejecutar pruebas unitarias con Jest
      - name: Run Jest tests
        run: npm run test -- --ci --watchAll=false --coverage

      # 6. Almacenar el informe de cobertura (siempre)
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/ # Ajusta esta ruta si tu informe de cobertura se genera en un lugar diferente
  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test   # Asegura que este job solo se ejecuta si 'test' ha sido exitoso
    if: github.ref == 'refs/heads/master'  # Asegura que solo se ejecute en la rama master

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Vincular o crear el proyecto de Vercel (si no está vinculado ya)
      #- name: Link or Create Vercel Project
        #run: npx vercel link --token VZOjjhVRJ3UV6IAxufrWngeX --yes
        # Aquí no necesitas especificar el nombre del proyecto. Vercel lo detectará automáticamente.

      # 3. Desplegar la aplicación a producción
      - name: Deploy to Production Vercel
        run: |
          echo "Desplegando aplicación a producción..."
          npx vercel --prod --token ${{ secrets.TOKEN_VERCEL }}
